To do

S: Verificat daca nu fac asignari si e constanta variabila

S: Asignari de genul x = class.method

In expresii am grija sa nu pot folosi arrayul intreg

P: Sa fac un buffer pentru mesajele de la Eval si TypeOf, raspunsurile sa fie afisate la final, doar daca e tot ok
   Pe langa asta sa generez symbol si func tables doar daca nu sunt erori sintactica si semantice



//section for special function representing the entry point of the program
int main () {
         //1. exemple de declaratii/initializari/utilizari de obiecte 
         
          
        //4. urmatorul bloc de cod, cu sintaxa voastra proprie, desigur

          x = 10; x1 = 20; x2 = 30; y = 100;
          if (x1 + test(x1,x2,f) < 5 + x1 && ((x > 2 || x1 < 4+x2) || x == 2)) {
	   x = 2;
             //si alte lucruri aici
           }
            x = test(test(x1,3,f)+2, y+4) + (30 - y * arr[2]) - 10;
x1 = x*100 + 5 * 100 + arr[2];
Eval(x*10-100);
Eval(x1);
Eval(x2* 10-200) ;
Eval(x+ test(x1,x,f)) ; 	
TypeOf(x+23);
TypeOf(f-30.0);

}










===================   bad     =======================
//declarati variabilele de mai jos cu sintaxa proprie, desigur
int x = 23;
//declarare variabila de 2 ori
int x1;
int x1;

int x2;
float f1 = 50.0;
string s = “ana”’;

//definiti urmatoarele functii, cu sintaxa  limbajului vostru pentru declarare functie de 2 ori
int testFunction(int x, float z) {
  // puteti pune orice aici 
}

int testFunction(int x, float z) {
  //puteti pune orice aici
}

int testFunction(float x, float z) {
  //puteti pune orice aici
}

int test(int param) {
 // puteti pune orice aici
}

//in functia voastra principala, scrieti urmatoarele instructiuni
int main () {
        x3 = x + 2;  //variabila care nu a fost declarata
	f1 = x + x2;  //tipuri de date care nu corespund
	f1 = test (5) + x;
x = test(5) + f1; //functie nedefinita
	x = s + f1; //sa aiba acelasi tip
            test(f1);  //verificare tip parametri functie
	test(5,f1);
	TypeOf(f1+x);
Eval(f1);
Eval(f1+x);
	test(5+f1);
}

//Respectati sintaxa data si pastrati inputul oferit, doar adaptati la sintaxa voastra
//Mai puteti includeti orice alte teste aveti de facut astfel incat sa se poata observa de la inceput ce verificari semantice ati facut voi. In acet fel pot vedea usor si rapid ce puncte din tema ati facut si ce nu, si calcula apoi punctajul conform cu ce ati facut.

a1[200]

a1[3] = {1,2,3,4,5}
int b = 2;
int[20] a2 = {'a', b, 1, 29 - 3}; 
apel cu prea multi param
array nedefinit
functie nedef
metoda nedef
apel cu mai putini param
apel cu tip diferit de param